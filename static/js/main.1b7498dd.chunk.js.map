{"version":3,"sources":["components/Filters/Filter/Filter.js","components/Filters/FilterBtn/FilterBtn.js","components/Filters/Search/Search.js","components/Filters/Filters.js","components/CardList/CardItem/CardItem.js","components/CardList/CardList.js","utils/getDataFromApi.js","components/Container/Container.js","index.js"],"names":["Filter","_ref","header","values","checked","handleChange","renderFilter","map","name","i","react_default","a","createElement","key","type","value","Object","keys","includes","onChange","className","FilterBtn","handleClick","assign","onClick","Search","placeholder","statusValues","genderValues","Filters","sortByName","sortByDesc","sortByAsc","sortByStatus","sortByGender","resetFilters","activeFilters","Filters_Search_Search","Filters_FilterBtn_FilterBtn","Filters_Filter_Filter","status","gender","CardItem","card","image","location","species","src","alt","CardList","React","forwardRef","ref","cards","CardList_CardItem_CardItem","getDataFromApi","asyncToGenerator","regenerator_default","mark","_callee","page","newUrl","response","result","wrap","_context","prev","next","abrupt","concat","fetch","sent","json","results","t0","console","log","stop","_x","apply","this","arguments","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleScroll","freeFilters","isFreeFilters","heightForUpdList","list","clientHeight","window","pageYOffset","setList","every","filter","length","e","stopPropagation","target","toLowerCase","applyFilters","sort","_e$target","undefined","_e$target2","state","_this$activeFilters","setState","sortedList","JSON","parse","stringify","item","nameA","nameB","addEventListener","removeEventListener","toConsumableArray","_this2","_this$state","components_Filters_Filters","sortFilter","components_CardList_CardList","el","Component","ReactDOM","render","Container_Container","document","getElementById"],"mappings":"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","file":"static/js/main.1b7498dd.chunk.js","sourcesContent":["import React from 'react';\nimport './Filter.scss';\n\nconst Filter = ({ header, values, checked, handleChange }) => {\n    const renderFilter = values.map((name, i) => (\n        <label key={i}>\n            <input\n                type='checkbox'\n                value={name}\n                checked={Object.keys(checked).includes(name)}\n                onChange={handleChange}\n            />\n            <span>{name}</span>\n        </label>\n    ));\n\n    return (\n        <div className='filter'>\n            <div>\n                <strong>{header}:</strong>\n            </div>\n            {renderFilter}\n        </div>\n    );\n};\n\nexport default Filter;\n","import React from 'react';\nimport './FilterBtn.scss';\n\nconst FilterBtn = ({ name, value, handleClick }) => {\n    return (\n        <button className='filter-btn' {...{ value }} onClick={handleClick}>\n            {name}\n        </button>\n    );\n};\n\nexport default FilterBtn;\n","import React from 'react';\nimport './Search.scss';\n\nconst Search = ({ handleChange }) => {\n    return (\n        <div className='search'>\n            <input\n                type='search'\n                placeholder='Search...'\n                onChange={handleChange}\n            />\n        </div>\n    );\n};\n\nexport default Search;\n","import React from 'react';\nimport './Filters.scss';\nimport { Filter } from './Filter';\nimport { FilterBtn } from './FilterBtn';\nimport { Search } from './Search';\n\nconst statusValues = ['Alive', 'Dead', 'unknown'];\nconst genderValues = ['Male', 'Female', 'unknown'];\n\nconst Filters = ({\n    sortByName,\n    sortByDesc,\n    sortByAsc,\n    sortByStatus,\n    sortByGender,\n    resetFilters,\n    activeFilters,\n}) => {\n    return (\n        <section className='filters'>\n            <Search handleChange={sortByName} />\n            <div className='sort-wrapper'>\n                <FilterBtn name='Asc' value='asc' handleClick={sortByAsc} />\n                <FilterBtn name='Desc' value='desc' handleClick={sortByDesc} />\n            </div>\n            <Filter\n                header='Status'\n                values={statusValues}\n                checked={activeFilters.status}\n                handleChange={sortByStatus}\n            />\n            <Filter\n                header='Gender'\n                values={genderValues}\n                checked={activeFilters.gender}\n                handleChange={sortByGender}\n            />\n            <FilterBtn\n                name='Reset Filters'\n                value='reset'\n                handleClick={resetFilters}\n            />\n        </section>\n    );\n};\n\nexport default Filters;\n","import React from 'react';\nimport './CardItem.scss';\n\nconst CardItem = ({ card }) => {\n    const { name, image, gender, location, species, status } = card;\n\n    return (\n        <li className='user-card'>\n            <h3 className='name'>{name}</h3>\n            <p>\n                <img src={image} alt='' />\n            </p>\n            <ul className='user-card__info'>\n                <li>\n                    <b>Species:</b> {species}\n                </li>\n                <li>\n                    <b>Gender:</b> {gender}\n                </li>\n                <li>\n                    <b>Status:</b> {status}\n                </li>\n                <li>\n                    <b>Location:</b> {location.name}\n                </li>\n            </ul>\n        </li>\n    );\n};\n\nexport default CardItem;\n","import React from 'react';\nimport './CardList.scss';\nimport { CardItem } from './CardItem';\n\nconst CardList = React.forwardRef(({ cards }, ref) => {\n    return (\n        <ul className='card-wrapper' ref={ref}>\n            {cards.map((card, i) => (\n                <CardItem key={i} card={card} />\n            ))}\n        </ul>\n    );\n});\n\nexport default CardList;\n","const API_URL = 'https://rickandmortyapi.com/api/character/';\nconst COUNT_PAGES = 25;\n\nexport const getDataFromApi = async (page) => {\n    if (page < 0 || page > COUNT_PAGES) {\n        return [];\n    }\n\n    let newUrl = API_URL;\n    if (page > 1) {\n        newUrl += `?page=${page}`;\n    }\n\n    try {\n        const response = await fetch(newUrl);\n        const result = await response.json();\n\n        return result.results;\n    } catch (err) {\n        console.log(err);\n    }\n};\n","import React, { Component } from 'react';\nimport './Container.scss';\nimport { Filters } from '../Filters';\nimport { CardList } from '../CardList';\nimport { getDataFromApi } from '../../utils/getDataFromApi';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list: [],\n            sortedList: null,\n        };\n        this.activeFilters = {\n            name: '',\n            sort: '',\n            status: {},\n            gender: {},\n        };\n        this.page = 1;\n        this.freeFilters = true;\n        this.heightForUpdList = 1000;\n    }\n\n    componentDidMount() {\n        this.setList();\n        window.addEventListener('scroll', this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll = () => {\n        this.freeFilters = this.isFreeFilters();\n        this.heightForUpdList = this.list.clientHeight - window.pageYOffset;\n\n        if (this.heightForUpdList < 805 && this.freeFilters) {\n            this.page++;\n            this.setList();\n        }\n    };\n\n    async setList() {\n        const list = await getDataFromApi(this.page);\n        this.setState({ list: [...this.state.list, ...list] });\n    }\n\n    isFreeFilters = () =>\n        Object.values(this.activeFilters).every(\n            (filter) => filter === '' || Object.keys(filter).length === 0\n        );\n\n    sortByName = (e) => {\n        e.stopPropagation();\n\n        const name = e.target.value.toLowerCase();\n        this.activeFilters.name = name;\n        this.applyFilters();\n    };\n\n    sortByDesc = (e) => {\n        e.stopPropagation();\n        this.activeFilters.sort = 'desc';\n        this.applyFilters();\n    };\n\n    sortByAsc = (e) => {\n        e.stopPropagation();\n        this.activeFilters.sort = 'asc';\n        this.applyFilters();\n    };\n\n    sortByStatus = (e) => {\n        e.stopPropagation();\n        const { value, checked } = e.target;\n\n        if (this.activeFilters.status[value] === undefined) {\n            this.activeFilters.status[value] = checked;\n        } else {\n            delete this.activeFilters.status[value];\n        }\n\n        this.applyFilters();\n    };\n\n    sortByGender = (e) => {\n        e.stopPropagation();\n        const { value, checked } = e.target;\n\n        if (this.activeFilters.gender[value] === undefined) {\n            this.activeFilters.gender[value] = checked;\n        } else {\n            delete this.activeFilters.gender[value];\n        }\n\n        this.applyFilters();\n    };\n\n    resetFilters = (e) => {\n        e.stopPropagation();\n        this.activeFilters = {\n            name: '',\n            sort: '',\n            status: {},\n            gender: {},\n        };\n        this.applyFilters();\n    };\n\n    applyFilters = () => {\n        const { list } = this.state;\n        const { name, sort, status, gender } = this.activeFilters;\n        this.freeFilters = this.isFreeFilters();\n\n        if (this.freeFilters) {\n            this.setState({ sortedList: null });\n            return;\n        }\n\n        let sortedList = JSON.parse(JSON.stringify(list));\n\n        if (name !== '') {\n            sortedList = sortedList.filter((item) =>\n                item.name.toLowerCase().includes(name)\n            );\n        }\n        if (sort !== 'desc') {\n            sortedList.sort((nameA, nameB) => {\n                if (nameA.name < nameB.name) return -1;\n            });\n        }\n\n        if (sort !== 'asc') {\n            sortedList.sort((nameA, nameB) => {\n                if (nameA.name > nameB.name) return -1;\n            });\n        }\n\n        if (Object.keys(status).length > 0) {\n            sortedList = sortedList.filter((item) =>\n                Object.keys(status).includes(item.status)\n            );\n        }\n\n        if (Object.keys(gender).length > 0) {\n            sortedList = sortedList.filter((item) =>\n                Object.keys(gender).includes(item.gender)\n            );\n        }\n\n        this.setState({ sortedList });\n    };\n\n    render() {\n        const { list, sortedList } = this.state;\n\n        return (\n            <div className='container'>\n                <header className='header'>\n                    <h1 className='header__text'>Friends App React</h1>\n                </header>\n                <div className='content-wrap'>\n                    <Filters\n                        sortByName={this.sortByName}\n                        sortByDesc={this.sortByDesc}\n                        sortByAsc={this.sortByAsc}\n                        sortFilter={this.sortFilter}\n                        sortByStatus={this.sortByStatus}\n                        sortByGender={this.sortByGender}\n                        resetFilters={this.resetFilters}\n                        activeFilters={this.activeFilters}\n                    />\n                    <CardList\n                        ref={(el) => {\n                            this.list = el;\n                        }}\n                        cards={sortedList === null ? list : sortedList}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Container } from './components/Container';\n\nReactDOM.render(<Container />, document.getElementById('root'));\n"],"sourceRoot":""}